[{"path":"https://jpquast.github.io/ggplate/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Jan-Philipp Quast Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jpquast.github.io/ggplate/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jan-Philipp Quast. Author, maintainer.","code":""},{"path":"https://jpquast.github.io/ggplate/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Quast J (2023). ggplate: Create Layout Plots Biological Culture Plates Microplates. https://github.com/jpquast/ggplate, https://jpquast.github.io/ggplate/.","code":"@Manual{,   title = {ggplate: Create Layout Plots of Biological Culture Plates and Microplates},   author = {Jan-Philipp Quast},   year = {2023},   note = {https://github.com/jpquast/ggplate, https://jpquast.github.io/ggplate/}, }"},{"path":"https://jpquast.github.io/ggplate/index.html","id":"ggplate-","dir":"","previous_headings":"","what":"Create Layout Plots of Biological Culture Plates and Microplates","title":"Create Layout Plots of Biological Culture Plates and Microplates","text":"goal ggplate package enable users create simple plots biological culture plates well microplates. continuous discrete values can plotted onto plate layout. Currently package supports following plate sizes: 6-well plate 12-well plate 24-well plate 48-well plate 96-well plate 384-well plate","code":""},{"path":"https://jpquast.github.io/ggplate/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Layout Plots of Biological Culture Plates and Microplates","text":"ggplate implemented R package. can install release version CRAN using install.packages() function. can install development version GitHub using devtools package copying following commands R: Note: devtools installed make sure removing comment sign (#).","code":"install.packages(\"ggplate\") # install.packages(\"devtools\") devtools::install_github(\"jpquast/ggplate\")"},{"path":"https://jpquast.github.io/ggplate/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Create Layout Plots of Biological Culture Plates and Microplates","text":"order use ggplate load package R environment simply calling library() function shown bellow. multiple example datasets provided can used create plots plate type. can access datasets using data() function. calling str() function can see data frame continuous 96-well plate dataset contains two columns. Value column contains values associated plate wells, well column contains corresponding well positions using combination alphabetic row names numeric column names. can use example data frame create 96-well plate layout plot using plate_plot() function setting plate_size argument 96. currently two options plate well type. can either \"round\" \"square\". plot specify \"round\", \"square\" default value plate_type argument provided. data frame provided data argument column name column containing well positions provided position argument. column name column containing values provided value argument. Note: Rmarkdown file set chunk options dpi=300 optimal result.  also possible label well plate corresponding label. plate interesting display exact value wells addition colouring. use label argument takes name column containing label input. example case column also provided value argument.  Try providing well column label argument instead Value column. label position, might make easier find specific positions. ### Legend Limit Adjustment legend continuous values cover range minimal measured maximal measured value. theoretically expected range values however bigger measured range can adjust legend limits. can done using limits arguments. provide vector new minimum maximum argument. Use NA refer existing minimum maximum want adjust one. show example dataset 384-well plate.  new range smaller measured range, values outside range coloured gray. ### Gradient Colour Adjustment plotting continuous variables possible change gradient colours providing new colours colour argument. colours used create new colour gradient plot.","code":"# Load ggplate package library(ggplate) # Load a dataset of continuous values for a 96-well plate data(data_continuous_96)  # Check the structure of the dataset str(data_continuous_96) #> tibble [96 × 2] (S3: tbl_df/tbl/data.frame) #>  $ Value: num [1:96] 1.19 0.88 0.17 0.85 0.78 0.23 1.95 0.4 0.88 0.26 ... #>  $ well : chr [1:96] \"A1\" \"A2\" \"A3\" \"A4\" ... # Create a 96-well plot with round wells plate_plot(data = data_continuous_96,             position = well,             value = Value,             plate_size = 96,             plate_type = \"round\") # Create a 96-well plot with labels plate_plot(data = data_continuous_96,             position = well,             value = Value,             label = Value,            plate_size = 96,             plate_type = \"round\") # Create a 96-well plot with labels plate_plot(data = data_continuous_96,             position = well,             value = Value,             label = well,            plate_size = 96,             plate_type = \"round\") # Load a dataset of continuous values for a 384-well plate data(data_continuous_384)  # Check the structure of the dataset str(data_continuous_384) #> tibble [384 × 2] (S3: tbl_df/tbl/data.frame) #>  $ Value: num [1:384] 1.98 0.7 0.61 0.12 0.27 0.67 0.47 0.37 0.04 0.65 ... #>  $ well : chr [1:384] \"A1\" \"A2\" \"A3\" \"A4\" ...  # Create a 384-well plot with adjusted legend limits plate_plot(data = data_continuous_384,             position = well,             value = Value,             plate_size = 384,            limits = c(0, 4)) # Create a 384-well plot with adjusted legend limits and outliers plate_plot(data = data_continuous_384,             position = well,             value = Value,             plate_size = 384,            limits = c(0, 3)) # Create a 384-well plot with a new colour gradient plate_plot(data = data_continuous_384,             position = well,             value = Value,             plate_size = 384,            colour = c(\"#000004FF\", \"#51127CFF\", \"#B63679FF\", \"#FB8861FF\", \"#FCFDBFFF\"))"},{"path":"https://jpquast.github.io/ggplate/index.html","id":"incomplete-datasets","dir":"","previous_headings":"Usage","what":"Incomplete datasets","title":"Create Layout Plots of Biological Culture Plates and Microplates","text":"dataset contain value well, empty wells uncoloured. Empty wells can either contain NA value argument can completely omitted input data frame.","code":"# Load a continuous of discrete values for a 48-well plate data(data_continuous_48_incomplete)  # Check the structure of the dataset str(data_continuous_48_incomplete) #> tibble [48 × 2] (S3: tbl_df/tbl/data.frame) #>  $ Value: num [1:48] 1.14 0.46 0.72 0.17 NA NA NA NA 1.37 0.37 ... #>  $ well : chr [1:48] \"A1\" \"A2\" \"A3\" \"A4\" ...  # Create a 48-well plot with adjusted legend limits plate_plot(data = data_continuous_48_incomplete,             position = well,             value = Value,             plate_type = \"round\",            plate_size = 48)"},{"path":"https://jpquast.github.io/ggplate/index.html","id":"plot-customisation","dir":"","previous_headings":"","what":"Plot Customisation","title":"Create Layout Plots of Biological Culture Plates and Microplates","text":"can customise plot various ways. Lets take discrete 6-well plate dataset example. dataset contains three categories assigned six wells plate. example pipetting scheme experiment. can change title plot using title argument. addition size title can adjusted using title_size argument.  addition possible change colours plot providing new colours colour argument. mentioned earlier work discrete values also gradients created based provided colours.  Also plot can provide column name label argument directly label wells plot. time can disable legend setting show_legend argument FALSE. case labels well large also resize label fits perfectly well using label_size argument.","code":"# Load a dataset of discrete values for a 6-well plate data(data_discrete_6)  # Check the structure of the dataset str(data_discrete_6) #> tibble [6 × 2] (S3: tbl_df/tbl/data.frame) #>  $ Condition: chr [1:6] \"DMSO\" \"Rapamycin\" \"Taxol\" \"DMSO\" ... #>  $ well     : chr [1:6] \"A1\" \"A2\" \"A3\" \"B1\" ...  # Create a 6-well plot with new title plate_plot(data = data_discrete_6,             position = well,             value = Condition,             plate_size = 6,             plate_type = \"round\",            title = \"Drug Treatment\",            title_size = 23) # Create a 6-well plot  plate_plot(data = data_discrete_6,             position = well,             value = Condition,             plate_size = 6,             plate_type = \"round\",            title = \"Drug Treatment\",            title_size = 23,            colour = c(\"#3a1c71\", \"#d76d77\", \"#ffaf7b\")) # Create a 6-well plot  plate_plot(data = data_discrete_6,             position = well,             value = Condition,             label = Condition,            plate_size = 6,             plate_type = \"round\",            title = \"Drug Treatment\",            title_size = 23,            colour = c(\"#3a1c71\", \"#d76d77\", \"#ffaf7b\"),            show_legend = FALSE,            label_size = 4)"},{"path":"https://jpquast.github.io/ggplate/index.html","id":"potential-issues","dir":"","previous_headings":"","what":"Potential Issues","title":"Create Layout Plots of Biological Culture Plates and Microplates","text":"order proportions independent output screen size, plate plot scaled according specific graphics device size. order see currently used graphics device size scaling factor silent argument function can set FALSE. can see bellow example graphics device size width: 7.292 height: 4.507 scaling factor 1.308.  possible generated plot overlapping spaced wells. can corrected resizing output graphics device size plot desired proportions. specific output size required plot desired proportions can use scale argument adjust shown . can see, however, now running problem legend larger screen size. legend_n_row argument can manually determine number rows used legend. case ideal split legend 2 columns setting legend_n_row 6 rows. addition adjust scale parameter 1.2 order space wells properly. dataset lot labels can become difficult impossible distinguish just colour can see dataset .  example likely better directly label wells instead displaying legend.","code":"# Load a dataset of discrete values for a 24-well plate data(data_discrete_24)  # Check the structure of the dataset str(data_discrete_24) #> tibble [24 × 2] (S3: tbl_df/tbl/data.frame) #>  $ Condition: chr [1:24] \"siControl\" \"siRaptor\" \"siRagB\" \"siRagD\" ... #>  $ well     : chr [1:24] \"A1\" \"A2\" \"A3\" \"A4\" ...  # Create a 24-well plot  plate_plot(data = data_discrete_24,             position = well,             value = Condition,             plate_size = 24,             plate_type = \"round\",            silent = FALSE) #> width: 7 height: 5 #> scaling factor: 1.256 # Create a 24-well plot  plate_plot(data = data_discrete_24,             position = well,             value = Condition,             plate_size = 24,             plate_type = \"round\",            silent = FALSE,            scale = 1.5) #> width: 7 height: 5 #> scaling factor: 1.5 # Create a 24-well plot with 2 row legend plate_plot(data = data_discrete_24,             position = well,             value = Condition,             plate_size = 24,             plate_type = \"round\",            silent = FALSE,            scale = 1.2,            legend_n_row = 6) #> width: 7 height: 5 #> scaling factor: 1.2 # Load a dataset of discrete values for a 96-well plate data(data_discrete_96)  # Check the structure of the dataset str(data_discrete_96) #> tibble [96 × 3] (S3: tbl_df/tbl/data.frame) #>  $ Compound          : chr [1:96] \"Positive Control\" \"Axitinib\" \"Gefitinib (ZD1839)\" \"Rapamycin (Sirolimus)\" ... #>  $ well              : chr [1:96] \"A1\" \"A2\" \"A3\" \"A4\" ... #>  $ Compound_multiline: chr [1:96] \"Positive\\nControl\" \"Axitinib\" \"Gefitinib\\n(ZD1839)\" \"Rapamycin\\n(Sirolimus)\" ...  # Create a 96-well plot  plate_plot(data = data_discrete_96,             position = well,             value = Compound,             plate_size = 96,             scale = 1,            plate_type = \"round\") # Create a 96-well plot with labels plate_plot(data = data_discrete_96,             position = well,             value = Compound,             label = Compound_multiline, # using a column that contains line brakes for labeling            plate_size = 96,             show_legend = FALSE, # hiding legend            label_size = 1.1, # setting label size            plate_type = \"round\")"},{"path":"https://jpquast.github.io/ggplate/index.html","id":"figure-export","dir":"","previous_headings":"","what":"Figure export","title":"Create Layout Plots of Biological Culture Plates and Microplates","text":"Since plot function checks size graphics device order apply appropriate scaling plot, important first generate output graphics device correct size. several functions can accomplish . include e.g. png(), pdf(), svg() many .","code":"# Generate a new graphics device with a defined size png(\"plate_plot_384_well_plate.png\", width = 10, height = 6, unit = \"in\", res = 300)   # Create a plot plate_plot(data = data_continuous_384,             position = well,             value = Value,             label = Value,            plate_size = 384,            colour = c(\"#000004FF\", \"#51127CFF\", \"#B63679FF\", \"#FB8861FF\", \"#FCFDBFFF\"))  # Close graphics device dev.off()"},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_12.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous 12-well plate dataset — data_continuous_12","title":"Continuous 12-well plate dataset — data_continuous_12","text":"dataset containing 12 positive numeric values randomly generated using normal distribution (rnorm()). value assigned position 12-well plate.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_12.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous 12-well plate dataset — data_continuous_12","text":"","code":"data_continuous_12"},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_12.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Continuous 12-well plate dataset — data_continuous_12","text":"data frame Value well column.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_12.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Continuous 12-well plate dataset — data_continuous_12","text":"Randomly generated.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_24.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous 24-well plate dataset — data_continuous_24","title":"Continuous 24-well plate dataset — data_continuous_24","text":"dataset containing 24 positive numeric values randomly generated using normal distribution (rnorm()). value assigned position 24-well plate.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_24.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous 24-well plate dataset — data_continuous_24","text":"","code":"data_continuous_24"},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_24.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Continuous 24-well plate dataset — data_continuous_24","text":"data frame Value well column.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_24.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Continuous 24-well plate dataset — data_continuous_24","text":"Randomly generated.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_384.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous 384-well plate dataset — data_continuous_384","title":"Continuous 384-well plate dataset — data_continuous_384","text":"dataset containing 384 positive numeric values randomly generated using normal distribution (rnorm()). value assigned position 384-well plate.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_384.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous 384-well plate dataset — data_continuous_384","text":"","code":"data_continuous_384"},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_384.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Continuous 384-well plate dataset — data_continuous_384","text":"data frame Value well column.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_384.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Continuous 384-well plate dataset — data_continuous_384","text":"Randomly generated.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_48.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous 48-well plate dataset — data_continuous_48","title":"Continuous 48-well plate dataset — data_continuous_48","text":"dataset containing 48 positive numeric values randomly generated using normal distribution (rnorm()). value assigned position 48-well plate.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_48.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous 48-well plate dataset — data_continuous_48","text":"","code":"data_continuous_48"},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_48.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Continuous 48-well plate dataset — data_continuous_48","text":"data frame Value well column.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_48.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Continuous 48-well plate dataset — data_continuous_48","text":"Randomly generated.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_48_incomplete.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous incomplete 48-well plate dataset — data_continuous_48_incomplete","title":"Continuous incomplete 48-well plate dataset — data_continuous_48_incomplete","text":"dataset containing 23 positive numeric values randomly generated using normal distribution (rnorm()). value assigned position 48-well plate. Therefore, every well plate contains value. position 1D second half plate NA.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_48_incomplete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous incomplete 48-well plate dataset — data_continuous_48_incomplete","text":"","code":"data_continuous_48_incomplete"},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_48_incomplete.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Continuous incomplete 48-well plate dataset — data_continuous_48_incomplete","text":"data frame Value well column.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_48_incomplete.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Continuous incomplete 48-well plate dataset — data_continuous_48_incomplete","text":"Randomly generated.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_6.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous 6-well plate dataset — data_continuous_6","title":"Continuous 6-well plate dataset — data_continuous_6","text":"dataset containing 6 positive numeric values randomly generated using normal distribution (rnorm()). value assigned position 6-well plate.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous 6-well plate dataset — data_continuous_6","text":"","code":"data_continuous_6"},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Continuous 6-well plate dataset — data_continuous_6","text":"data frame Value well column.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_6.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Continuous 6-well plate dataset — data_continuous_6","text":"Randomly generated.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_96.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous 96-well plate dataset — data_continuous_96","title":"Continuous 96-well plate dataset — data_continuous_96","text":"dataset containing 96 positive numeric values randomly generated using normal distribution (rnorm()). value assigned position 96-well plate.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_96.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous 96-well plate dataset — data_continuous_96","text":"","code":"data_continuous_96"},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_96.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Continuous 96-well plate dataset — data_continuous_96","text":"data frame Value well column.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_continuous_96.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Continuous 96-well plate dataset — data_continuous_96","text":"Randomly generated.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_discrete_24.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete 24-well plate dataset — data_discrete_24","title":"Discrete 24-well plate dataset — data_discrete_24","text":"dataset containing 12 conditions siRNA treatment 24-well plate. siRNA treatment consists control (siControl) 11 siRNAs targeting mRNAs proteins mTORC1 pathway. treatment assigned position 24-well plate.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_discrete_24.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete 24-well plate dataset — data_discrete_24","text":"","code":"data_discrete_24"},{"path":"https://jpquast.github.io/ggplate/reference/data_discrete_24.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Discrete 24-well plate dataset — data_discrete_24","text":"data frame Value well column.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_discrete_24.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Discrete 24-well plate dataset — data_discrete_24","text":"Theoretically possible siRNA treatment cells.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_discrete_6.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete 6-well plate dataset — data_discrete_6","title":"Discrete 6-well plate dataset — data_discrete_6","text":"dataset containing 3 conditions drug treatment 6-well plate. treatment consists DMSO negative control, Rapamycin Taxol. treatment assigned position 6-well plate.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_discrete_6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete 6-well plate dataset — data_discrete_6","text":"","code":"data_discrete_6"},{"path":"https://jpquast.github.io/ggplate/reference/data_discrete_6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Discrete 6-well plate dataset — data_discrete_6","text":"data frame Value well column.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_discrete_6.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Discrete 6-well plate dataset — data_discrete_6","text":"Theoretically possible treatment cells.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_discrete_96.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete 96-well plate dataset — data_discrete_96","title":"Discrete 96-well plate dataset — data_discrete_96","text":"dataset containing 22 conditions hypothetical drug treatment 96-well plate. first column contains negative control last column contains positive control. treatment assigned four wells 96-well plate.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_discrete_96.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete 96-well plate dataset — data_discrete_96","text":"","code":"data_discrete_96"},{"path":"https://jpquast.github.io/ggplate/reference/data_discrete_96.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Discrete 96-well plate dataset — data_discrete_96","text":"data frame Value well column.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/data_discrete_96.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Discrete 96-well plate dataset — data_discrete_96","text":"Drugs chosen standard FDA approved drug library.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/plate_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plate Layout Plot — plate_plot","title":"Plate Layout Plot — plate_plot","text":"Plots culture plate microplate desired format. continuous well discrete values can displayed colours labels.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/plate_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plate Layout Plot — plate_plot","text":"","code":"plate_plot(   data,   position,   value,   label,   plate_size = 96,   plate_type = \"square\",   colour,   limits,   title,   title_size,   show_legend = TRUE,   legend_n_row,   label_size,   silent = TRUE,   scale )"},{"path":"https://jpquast.github.io/ggplate/reference/plate_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plate Layout Plot — plate_plot","text":"data data frame contains least column plate position information column values labels. position character column data data frame contains plate positions. format: row = letter, column = number. example A1, D12 etc. value character numeric column data data frame contains values plotted colours plate layout. Can column label. label character numeric column data data frame contains values plotted labels plate layout. Can column value. plate_size numeric value specifies plate size (number wells) used plot. Possible values : 6, 12, 24, 48, 96 384. plate_type character value specifies well type. Possible values \"round\" \"square\". default \"square\". colour optional, character vector contains colours used plot. value argument discrete colours used provided. continuous gradient created using colours. limits optional, numeric vector length two providing new limits colour gradient. Use NA refer existing minimum maximum. argument supplied existing minimum maximum values provided value argument used start end point colour gradient. title optional, character value contains plot title. title_size optional, numeric value determines text size title. size also affected scale argument. show_legend logical value specifies plot legend shown. Default TRUE. legend_n_row optional, numeric value specifies number rows legends. value provided, automatic ggplot default used. label_size optional, numeric value determines text size well labels. size also affected scale argument. silent logical value specifies function report size plotting area adjusted scale parameter. Default TRUE meaning return message. plot optimized device size : width = 5.572917 height = 3.177083 , determined using function par(\"fin\"). means device dimensions scaling factor 1. scale numeric value scales point sizes labels plot. provided, plot uses device size find optimal scaling factor output, however, might slightly (e.g. due number labels) can manually adjusted argument.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/plate_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plate Layout Plot — plate_plot","text":"plate layout plot.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/plate_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plate Layout Plot — plate_plot","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(tidyr) library(stringr)  # Create example data for continuous value  # 96-well plate data_continuous_96 <- data.frame(matrix(round(abs(rnorm(96)), 2), nrow = 8, ncol = 12)) |>   mutate(rows = LETTERS[1:8]) |>   pivot_longer(cols = -rows, names_to = \"cols\", values_to = \"value\") |>   mutate(     cols = as.numeric(str_remove(cols, pattern = \"V|X\")),     well = paste0(rows, cols)   ) |>   distinct(well, value)  # 384-well plate data_continuous_384 <- data.frame(matrix(round(abs(rnorm(384)), 2), nrow = 16, ncol = 24)) |>   mutate(rows = LETTERS[1:16]) |>   pivot_longer(cols = -rows, names_to = \"cols\", values_to = \"value\") |>   mutate(     cols = as.numeric(str_remove(cols, pattern = \"V|X\")),     well = paste0(rows, cols)   ) |>   distinct(well, value)  # Create a 96-well plot with round wells plate_plot(   data = data_continuous_96,   position = well,   value = value,   label = value,   plate_size = 96,   plate_type = \"round\" )   # Create a 384-well plot with square wells # Define a custom lower limit # Define a custom colour scheme plate_plot(   data = data_continuous_384,   position = well,   value = value,   label = value,   plate_size = 384,   colour = c(\"#03001e\", \"#7303c0\", \"#ec38bc\", \"#fdeff9\"),   limits = c(0, NA) )   # Create example data for discrete value  # 24-well plate data_discrete_24 <- data.frame(   matrix(     c(       rep(\"Control\", 8),       rep(\"Drug 1\", 8),       rep(\"Drug 2\", 8)     ),     nrow = 4,     ncol = 6   ) ) |>   mutate(rows = LETTERS[1:4]) |>   pivot_longer(cols = -rows, names_to = \"cols\", values_to = \"Condition\") |>   mutate(     cols = as.numeric(str_remove(cols, pattern = \"V|X\")),     well = paste0(rows, cols)   ) |>   distinct(well, Condition)  # 6-well plate data_discrete_6 <- data.frame(   matrix(     c(       rep(\"DMSO\", 2),       rep(\"Rapamycin\", 2),       rep(\"Taxol\", 2)     ),     nrow = 2,     ncol = 3   ) ) |>   mutate(rows = LETTERS[1:2]) |>   pivot_longer(cols = -rows, names_to = \"cols\", values_to = \"Condition\") |>   mutate(     cols = as.numeric(str_remove(cols, pattern = \"V|X\")),     well = paste0(rows, cols)   ) |>   distinct(well, Condition)  # Create a 24-well plot plate_plot(   data = data_discrete_24,   position = well,   value = Condition,   plate_size = 24,   plate_type = \"round\",   show_legend = FALSE )   # Create a 6-well plot # Define a custom colour scheme # Adjust label_size to fit text plate_plot(   data = data_discrete_6,   position = well,   value = Condition,   label = Condition,   plate_size = 6,   plate_type = \"round\",   colour = c(\"#3a1c71\", \"#d76d77\", \"#ffaf7b\"),   label_size = 4,   show_legend = FALSE )"},{"path":"https://jpquast.github.io/ggplate/reference/protti_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"Colour scheme for protti — protti_colours","title":"Colour scheme for protti — protti_colours","text":"colour scheme protti package contains 100 colours.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/protti_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colour scheme for protti — protti_colours","text":"","code":"protti_colours"},{"path":"https://jpquast.github.io/ggplate/reference/protti_colours.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Colour scheme for protti — protti_colours","text":"vector containing 100 colours","code":""},{"path":"https://jpquast.github.io/ggplate/reference/protti_colours.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Colour scheme for protti — protti_colours","text":"protti R package.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/viridis_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"Viridis colour scheme — viridis_colours","title":"Viridis colour scheme — viridis_colours","text":"colour scheme viridis colour scheme viridis R package.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/viridis_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Viridis colour scheme — viridis_colours","text":"","code":"viridis_colours"},{"path":"https://jpquast.github.io/ggplate/reference/viridis_colours.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Viridis colour scheme — viridis_colours","text":"vector containing 256 colours","code":""},{"path":"https://jpquast.github.io/ggplate/reference/viridis_colours.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Viridis colour scheme — viridis_colours","text":"viridis R package","code":""},{"path":"https://jpquast.github.io/ggplate/news/index.html","id":"ggplate-0019000","dir":"Changelog","previous_headings":"","what":"ggplate 0.0.1.9000","title":"ggplate 0.0.1.9000","text":"First release version.","code":""}]
