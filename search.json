[{"path":"https://jpquast.github.io/ggplate/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Jan-Philipp Quast Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jpquast.github.io/ggplate/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jan-Philipp Quast. Author, maintainer.","code":""},{"path":"https://jpquast.github.io/ggplate/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Quast J (2023). ggplate: Create Layout Plots Biological Culture Plates Microplates. https://github.com/jpquast/ggplate, https://jpquast.github.io/ggplate/.","code":"@Manual{,   title = {ggplate: Create Layout Plots of Biological Culture Plates and Microplates},   author = {Jan-Philipp Quast},   year = {2023},   note = {https://github.com/jpquast/ggplate, https://jpquast.github.io/ggplate/}, }"},{"path":"https://jpquast.github.io/ggplate/index.html","id":"ggplate-","dir":"","previous_headings":"","what":"Create Layout Plots of Biological Culture Plates and Microplates","title":"Create Layout Plots of Biological Culture Plates and Microplates","text":"Create Layout Plots Biological Culture Plates Microplates.","code":""},{"path":"https://jpquast.github.io/ggplate/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Layout Plots of Biological Culture Plates and Microplates","text":"can install development version ggplate GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"jpquast/ggplate\")"},{"path":"https://jpquast.github.io/ggplate/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Create Layout Plots of Biological Culture Plates and Microplates","text":"basic example shows solve common problem:","code":"library(ggplate) #> 📊 Welcome to ggplate version 0.0.1! 📈 #>                              #> 🖍 Have fun plotting your data! 💻 ## basic example code"},{"path":"https://jpquast.github.io/ggplate/reference/plate_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plate Layout Plot — plate_plot","title":"Plate Layout Plot — plate_plot","text":"Plots culture plate microplate desired format. continuous well discrete values can displayed colours labels.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/plate_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plate Layout Plot — plate_plot","text":"","code":"plate_plot(   data,   position,   value,   label,   plate_size = 96,   plate_type = \"square\",   colour,   limits,   title,   title_size,   show_legend = TRUE,   label_size,   scale = 1 )"},{"path":"https://jpquast.github.io/ggplate/reference/plate_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plate Layout Plot — plate_plot","text":"data data frame contains least column plate position information column values labels. position character column data data frame contains plate positions. format: row = letter, column = number. example A1, D12 etc. value character numeric column data data frame contains values plotted colours plate layout. Can column label. label character numeric column data data frame contains values plotted labels plate layout. Can column value. plate_size numeric value specifies plate size (number wells) used plot. Possible values : 6, 12, 24, 48, 96 384. plate_type character value specifies well type. Possible values \"round\" \"square\". default \"square\". colour optional, character vector contains colours used plot. value argument discrete colours used provided. continuous gradient created using colours. limits optional, numeric vector length two providing new limits colour gradient. Use NA refer existing minimum maximum. argument supplied existing minimum maximum values provided value argument used start end point colour gradient. title optional, character value contains plot title. title_size optional, numeric value determines text size title. size also affected scale argument. show_legend logical value specifies plot legend shown. Default TRUE. label_size optional, numeric value determines text size well labels. size also affected scale argument. scale numeric value scales point sizes labels plot. Since usually scale plot resized, argument can used keep appearance plot consistent.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/plate_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plate Layout Plot — plate_plot","text":"plate layout plot.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/plate_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plate Layout Plot — plate_plot","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(tidyr) library(stringr)  # Create example data for continuous value  # 96-well plate data_continuous_96 <- data.frame(matrix(round(abs(rnorm(96)), 2), nrow = 8, ncol = 12)) |>   mutate(rows = LETTERS[1:8]) |>   pivot_longer(cols = -rows, names_to = \"cols\", values_to = \"value\") |>   mutate(     cols = as.numeric(str_remove(cols, pattern = \"V|X\")),     well = paste0(rows, cols)   ) |>   distinct(well, value)  # 384-well plate data_continuous_384 <- data.frame(matrix(round(abs(rnorm(384)), 2), nrow = 16, ncol = 24)) |>   mutate(rows = LETTERS[1:16]) |>   pivot_longer(cols = -rows, names_to = \"cols\", values_to = \"value\") |>   mutate(     cols = as.numeric(str_remove(cols, pattern = \"V|X\")),     well = paste0(rows, cols)   ) |>   distinct(well, value)  # Create a 96-well plot with round wells plate_plot(   data = data_continuous_96,   position = well,   value = value,   label = value,   plate_size = 96,   plate_type = \"round\" )   # Create a 384-well plot with square wells # Define a custom lower limit # Define a custom colour scheme plate_plot(   data = data_continuous_384,   position = well,   value = value,   label = value,   plate_size = 384,   colour = c(\"#03001e\", \"#7303c0\", \"#ec38bc\", \"#fdeff9\"),   limits = c(0, NA) )   # Create example data for discrete value  # 24-well plate data_discrete_24 <- data.frame(   matrix(     c(       rep(\"Control\", 8),       rep(\"Drug 1\", 8),       rep(\"Drug 2\", 8)     ),     nrow = 4,     ncol = 6   ) ) |>   mutate(rows = LETTERS[1:4]) |>   pivot_longer(cols = -rows, names_to = \"cols\", values_to = \"Condition\") |>   mutate(     cols = as.numeric(str_remove(cols, pattern = \"V|X\")),     well = paste0(rows, cols)   ) |>   distinct(well, Condition)  # 6-well plate data_discrete_6 <- data.frame(   matrix(     c(       rep(\"DMSO\", 2),       rep(\"Rapamycin\", 2),       rep(\"Taxol\", 2)     ),     nrow = 2,     ncol = 3   ) ) |>   mutate(rows = LETTERS[1:2]) |>   pivot_longer(cols = -rows, names_to = \"cols\", values_to = \"Condition\") |>   mutate(     cols = as.numeric(str_remove(cols, pattern = \"V|X\")),     well = paste0(rows, cols)   ) |>   distinct(well, Condition)  # Create a 24-well plot plate_plot(   data = data_discrete_24,   position = well,   value = Condition,   plate_size = 24,   plate_type = \"round\",   show_legend = FALSE )   # Create a 6-well plot # Define a custom colour scheme # Adjust label_size to fit text plate_plot(   data = data_discrete_6,   position = well,   value = Condition,   label = Condition,   plate_size = 6,   plate_type = \"round\",   colour = c(\"#3a1c71\", \"#d76d77\", \"#ffaf7b\"),   label_size = 4,   show_legend = FALSE )"},{"path":"https://jpquast.github.io/ggplate/reference/protti_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"Colour scheme for protti — protti_colours","title":"Colour scheme for protti — protti_colours","text":"colour scheme protti contains 100 colours.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/protti_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colour scheme for protti — protti_colours","text":"","code":"protti_colours"},{"path":"https://jpquast.github.io/ggplate/reference/protti_colours.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Colour scheme for protti — protti_colours","text":"vector containing 100 colours","code":""},{"path":"https://jpquast.github.io/ggplate/reference/protti_colours.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Colour scheme for protti — protti_colours","text":"Dina Schuster's imagination.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/viridis_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"Viridis colour scheme — viridis_colours","title":"Viridis colour scheme — viridis_colours","text":"colour scheme viridis colour scheme viridis R package.","code":""},{"path":"https://jpquast.github.io/ggplate/reference/viridis_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Viridis colour scheme — viridis_colours","text":"","code":"viridis_colours"},{"path":"https://jpquast.github.io/ggplate/reference/viridis_colours.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Viridis colour scheme — viridis_colours","text":"vector containing 256 colours","code":""},{"path":"https://jpquast.github.io/ggplate/reference/viridis_colours.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Viridis colour scheme — viridis_colours","text":"viridis R package","code":""},{"path":"https://jpquast.github.io/ggplate/news/index.html","id":"ggplate-0019000","dir":"Changelog","previous_headings":"","what":"ggplate 0.0.1.9000","title":"ggplate 0.0.1.9000","text":"First release version.","code":""}]
